.ds wV 1.020
.TH "weblint \*(wV" 1L "August 97" "Handmade"
.de tS
..
.de tE
..
.de tI
.TP
\\fB\\$1\fP
..
.de iD
.TP
\fB\\$3\fP
\fIIdentifier\fP: \\$1
.br
\fIDefault\fP: \\$2
..
.de wS
.LP
.TP
..
.de wE
..
.de lS
.RS
..
.de lE
.RE
..
.\" weblint command-line option macro
.de wO
[
.B "\\$1 \fI\\$2\fP"
.\".ie \\n(.c==2 .B "\\$1 \fI\\$2\fP"
.\".el .B "\\$1"
]
..
.de lI
.TP 4
.B \(bu
\\$1
..
.SH NAME
weblint \- pick fluff off web pages (HTML)
.SH SYNOPSIS
.B weblint
.wO -d id
.wO -e id
.wO -f filename
.wO -i
.wO -l
.wO -s
.wO -stderr
.wO -t
.wO -todo
.wO -help
.wO -U
.wO -urlget command
.wO -v
.wO -version
.wO -warnings
.wO -x extension
file1 .. fileN
.SH DESCRIPTION
Weblint is a Perl script which picks fluff off HTML pages.
Files to be checked are passed on the command-line:
.RS
.nf
.ft CW

% weblint foobar.html ./dodgy-files/ index.html

.ft P
.fi
.RE
If any of the arguments are directories weblint will recurse
in the directory, and check any HTML files found.
If an argument is a URL, then weblint will get the file
using a URL retrieval program, and then check the file:
.RS
.nf
.ft CW

% weblint http://www.foobar.com/

.ft P
.fi
.RE
By default weblint will use lynx to retrieve URLs,
but this can be over-ridden.
A filename of `-' specifies that weblint should read from standard input:
.RS
.nf
.ft CW

% lynx -source http://www.foobar.com/ | weblint -

.ft P
.fi
.RE
Warnings are generated a la lint:
.LP
.RS
.nf
.ft CW
home.html(9): unmatched </A> (no matching <A> seen).
.ft P
.fi
.RE
.TP
Weblint includes the following features:
.lS
.lI "by default checks for HTML 3.2 (Wilbur)"
.lI "46 different checks and warnings"
.lI "Warnings can be enabled/disabled individually, as per your preference"
.lI "basic structure and syntax checks"
.lI "warnings for use of unknown elements and element attributes."
.lI "context checks (where a tag must appear within a certain element)."
.lI "overlapped or illegally nested elements."
.lI "do IMG elements have ALT text?"
.lI "flags obsolete elements."
.lI "support for user and site configuration files"
.lI "stylistic checks"
.lI "checks for html which is not portable across all browsers"
.lI "flags markup embedded in comments, since this can confuse some browsers"
.lI "support for Netscape, and Microsoft HTML extensions"
.lE
.SH OPTIONS
.tS
.tI "-d \fIwarning-identifier\fP"
Disable the warning associated with the identifier.
Multiple identifiers can be specified,
with a comma between identifiers.
.tI "-e \fIwarning-identifier\fP"
Enable the warning associated with the identifier.
Multiple identifiers can be specified,
with a comma between identifiers.
.tI "-f \fIconfig-file\fP"
Specify a weblint configuration file which should be used in place
of the user's default config file, or the site configuration file.
.tI -help
Show a short usage summary.
.tI "-i"
Ignore case of element tags.
.tI "-l"
When recursing in directories,
ignore any files which are symlinks (also known as soft links).
This will also cause files on the command-line to be ignored if they
are symlinks, unless only one file is given.
.tI -pedantic
Turn on all warnings except the case-sensitive and bad-link warnings.
.tI -s
Generate `short' warning messages,
which do not include the filename.
.tI "-stderr"
Print warning messages to STDERR rather than STDOUT.
.tI -t
Enable terse warning mode,
which is mainly useful for the weblint testsuite.
.tI -U
Same as -help.
.tI "-urlget \fIcommand\fP"
The command which should be used to retrieve HTML pages specified by URL.
.tI -v
Display the version number.
.tI -version
Display the version number.
.tI -todo
This prints out the URL for the online version of the weblint ToDo list.
This includes known bugs, and requested/planned features.
.tI -warnings
List all supported warnings, with warning identifier,
and whether the warning is enabled.
.tI "-x \fIextension\fP"
Include checks for the specified HTML extension;
multiple extensions can be specified, separated with a comma.
Currently the only extensions supported are \fINetscape\fP and \fIMicrosoft\fP.
This can also be set in your weblint configuration file,
described below.
.tE
.SH "HTML EXTENSIONS"
Unless you specify otherwise, weblint assumes you are using HTML 3.2.
Weblint supports the Netscape and Microsoft HTML extensions in addition.
For example, weblint will complain that the BLINK
element is not known,
unless you enable the
.B "Netscape"
extension.
The following extensions are currently supported:
.tS
.tI "Netscape"
The HTML extensions supported by the Netscape browser, version 4.
.tI "Microsoft"
The HTML extensions supported by Microsoft Internet Explorer, version 4.
.tE
.LP
To enable an extension, you can either use the \fB-x\fP command-line
switch:
.nf

    \f(CW\s-2% weblint -x Netscape foobar.html\s+2\fP

.fi
Or you can use the \fBextension\fP keyword in your \fI.weblintrc\fP:
.nf

    \f(CW\s-2# enable the Microsoft extensions
    extension Microsoft\s+2\fP

.fi
.SH "CONFIGURATION FILE"
\fIWeblint\fP can be configured using a file \fI.weblintrc\fP 
in your home directory (or a file referenced by the WEBLINTRC
environment variable).
This file can be used to enable or disable specific warnings,
set weblint variables, and include HTML extensions,
as described above.
Each warning has a short identifier string, used to refer to
the warning in config files, and from the command-line.
For example, if you want to enable the check for tags in upper-case,
but disable the check for obsolete elements,
then you would include the following lines in your .weblintrc:
.LP
.RS
.ft CW
.ps -2
.nf
# specify the command used to retrieve URLs (-urlget switch)
set url-get = lynx -source

# the style of warning message to generate (lint, short, or terse)
set message-style = lint

# enable warning for tags not in upper-case
enable upper-case

# disable the warning for obsolete tags
disable obsolete

# enable the Netscape HTML extensions
extension Netscape

# when recursing in a directory,
# ignore files which are symlinks (also known as soft links)
ignore symlinks
.fi
.ps +2
.ft P
.RE
.LP
The keywords can be followed by any number of arguments,
separated by spaces or tabs.
Anything following a `#' is treated as a comment.
.LP
A sample configuration file is included in the weblint distribution
(as of version 1.004),
which mirrors the configuration built-in to weblint.
.LP
Weblint also supports a site configuration file.
If a user does not have a personal configuration file,
then weblint will check for a local site configuration file.
To provide such a file,
create a directory such as /usr/local/weblint,
and create a file global.weblintrc.
You need to edit the weblint script and modify the $SITE_DIR variable,
which you will find near the top of the file.
For example:
.nf

    \f(CW\s-2$SITE_DIR = '/usr/local/weblint';\s+2\fP

.fi
At some point in the future there will be configuration support for
weblint, so you won't have to modify the script directly yourself.
.LP
If you have a site configuration file,
then users can inherit the site defaults by adding the following line
at the top of their .weblintrc file:
.nf

    \f(CW\s-2use global weblintrc\s+2\fP

.fi
.SH WARNINGS
All warnings generated by \fIweblint\fP are listed below,
along with the associated identifier,
and whether the warning is enabled or disabled by default.
.wS
.iD upper-case disabled "tag <...> is not in upper case."
.iD lower-case disabled "tag <...> is not in lower case."
.iD required-attribute enabled "\f(BIfoo\fP attribute is required for <...>"
.iD expected-attribute enabled "expected an attribute for <...>"
.iD unknown-element enabled "unknown element <...>"
.iD unknown-attribute enabled "unknown attribute `...' for element <...>."
.iD leading-whitespace enabled "should not have whitespace between `<' and `...>'"
.iD here-anchor enabled "bad form to use `here' as an anchor!"
.iD require-head enabled "no <TITLE> in HEAD element."
.iD once-only enabled "tag <...> should only appear once.  I saw one on line XX!"
.iD body-no-head enabled "<BODY> but no <HEAD>."
.iD html-outer enabled "outer tags should be <HTML> .. </HTML>."
.iD head-element enabled "<...> can only appear in the HEAD element."
.iD non-head-element enabled "<...> cannot appear in the HEAD element."
.iD obsolete enabled "<...> is obsolete."
.iD mis-match enabled "unmatched </...> (no matching <...> seen)."
.iD img-alt enabled "IMG does not have ALT text defined."
.iD nested-element enabled "<...> cannot be nested."
.iD mailto-link disabled "Did not see <LINK REV=MADE HREF=mailto:...> in HEAD."
.iD element-overlap enabled "</...> on line XX seems to overlap <...>, opened on line YY."
.iD unclosed-element enabled "no closing </...> seen for <...> on line XX."
.iD markup-in-comment enabled "markup embedded in a comment can confuse some browsers."
.iD odd-quotes enabled "odd number of quotes in element <...>."
.iD heading-order enabled "heading <H?> follows <H?> on line N."
.iD bad-link disabled "target for anchor "..." not found."
.iD unexpected-open enabled "unexpected < in <...> -- potentially unclosed element."
.iD required-context enabled "illegal context for <...> - must appear in <...> element."
.iD unclosed-comment enabled "unclosed comment (comment should be: <!-- ... -->"
.iD illegal-closing enabled "element <...> is not a container -- </...> not legal."
.iD physical-font disabled "<...> is physical font markup -- use logical (such as XXX)"
.iD repeated-attribute enabled "attribute XYZ is repeated in element <...>"
.iD empty-container enabled "empty container element <...>"
.iD attribute-delimiter enabled "use of ' for attribute value delimiter is not supported by all browsers (attribute XYZ of tag ABC)"
.iD closing-attribute enabled "closing tag <...> should not have any attributes specified."
.iD directory-index enabled "directory DIR does not have an index file (index.html)"
.iD must-follow enabled "<...> must immediately follow <...>"
.iD img-size disabled "setting WIDTH and HEIGHT attributes on IMG tag can improve rendering performance on some browsers"
.iD container-whitespace disabled "leading/trailing whitespace in content of container element ..."
.iD require-doctype disabled "first element was not DOCTYPE specification"
.iD literal-metacharacter enabled "`>' should be represented as `&gt;'"
.iD heading-mismatch enabled "malformed heading - open tag is <H?>, but closing is </H?>"
.iD bad-text-context enabled "illegal context, <...>, for text; should be in XXX."
.iD attribute-format enabled "illegal value for AAA attribute of XXX (...)"
.iD extension-markup enabled "<...> is extended markup (use '-x <extension>' to allow this)."
.iD extension-attribute enabled "attribute `...' for <...> is extended markup (use '-x <extension>' to allow this)."
.iD quote-attribute-value enabled "value for attribute XYZ (xyz-value) of element FOOBAR should be quoted (i.e. XYZ='xyz-value')"
.iD meta-in-pre enabled "you should use '&gt;' in place of '>', even in a PRE element."
.iD heading-in-anchor enabled "<A> should be inside <H?>, not <H?> inside <A>."
.iD title-length enabled "The HTML spec. recommends the TITLE be no longer than 64 characters."
.wE
.SH ""
.SH "TESTSUITE"
A simple regression testsuite is included with weblint,
in the Perl script \f(CW\s-2test.pl\s+2\fP.
You can run the testsuite with either of the following commands:
.nf
    \f(CW\s-2% make test
    % ./test.pl\s+2\fP
.fi
The results are printed to STDERR,
with a more complete report generated in test.log.
.LP
All tests should pass.
If any tests fail, please email test.log to the address given
in the AUTHOR section below.
.SH "ENVIRONMENT VARIABLES"
.tS
.tI "WEBLINTRC"
If this variable is defined, and references a file,
then \fIweblint\fP will read the referenced file for the user's configuration,
rather than $HOME/.weblintrc.
.tI "TMPDIR"
The directory where weblint will create temporary working files.
Defaults to /usr/tmp.
.tE
.SH FILES
.tS
.tI "$HOME/.weblintrc"
The user's configuration file.  See the section `CONFIGURATION FILE'.
.tE
.SH "SEE ALSO"
.BR perl(1)
.SH VERSION
This man page describes \fIweblint \*(wV\fP.
.SH AVAILABILITY
.ft CW
.ps -2
.nf
ftp://ftp.cre.canon.co.uk/pub/weblint/weblint.tar.gz
http://www.cre.canon.co.uk/~neilb/weblint/
.fi
.ft P
.ps +2
.SH "KNOWN BUGS"
The list of known bugs can be found on the weblint home page:
.nf

    http://www.cre.canon.co.uk/~neilb/weblint/todo/

.fi
Certain versions of Perl have bugs which are triggered by weblint.
You shouldn't experience problems if you have 4.036, or 5.002.
.SH AUTHOR
Neil Bowers, Canon Research Centre Europe
.br
neilb@cre.canon.co.uk
.SH CONTRIBUTIONS
Lots of people have contributed to weblint,
in the form of suggestions, bug reports, fixes, and contributed code.
Please email me if your name should appear in the roll call below.
.LP
Abigail <abigail@mars.ic.iaf.nl>;
Anthony Thyssen <anthony@cit.gu.edu.au>;
Axel Boldt <axel@uni-paderborn.de>;
Barry Bakalor <barry@hal.com>;
Bill Arnett <billa@netcom.com>;
Bob Friesenhahn <bfriesen@simple.dallas.tx.us>;
Mark Gates <mr-gates@uiuc.edu>;
Bruce Speyer <bspeyer@texas-one.org>;
Chris Siebenmann <cks@hawkwind.utcs.toronto.edu>;
Clay Webster <clay@unipress.com>;
Dana Jacobsen <dana@acm.org>;
David Begley <david@bacall.nepean.uws.edu.au>;
David J. MacKenzie <djm@va.pubnix.com>;
Douglas Brick <dbrick@u.washington.edu>;
Gil Citro;
Eric de Mund <ead@ixian.com>;
Richard Finegold <goldfndr@eskimo.com>;
Joerg Heitkoetter <Joerg.Heitkoetter@germany.eu.net>;
David Koblas <koblas@homepages.com>;
John Labovitz <johnl@ora.com>;
Eric Maryniak <E.Maryniak@rgd.nl>;
John F. Whitehead <jfw@wral-tv.com>
Juergen Schoenwaelder <schoenw@ibr.cs.tu-bs.de>;
Frank Steinke <fsteinke@zeta.org.au>;
Larry Virden <lvirden@cas.org>;
Paul Black <black@lal.cs.byu.edu>;
Doug Grinbergs <dougg@qualcomm.com>;
Philip Hallstrom <philip@wolfe.net>;
Craig Leres <leres@ee.lbl.gov>;
Richard Lloyd <R.K.Lloyd@csc.liv.ac.uk>;
Charles F. Randall <crandall@dmacc.cc.ia.us>;
Robert Schmunk <pcrxs@nasagiss.giss.nasa.gov>;
Jeff Schave <schave@engr.wisc.edu>;
Jon Thackray <jrmt@uk.gdscorp.com>;
Jens Thordarson <thordurh@rhi.hi.is>;
Ryan Waldron <rew@nuance.com>;
Thomas Leavitt <leavitt@webcom.com>;
Tom Neff <tneff@panix.com>;
Victor Parada <vparada@inf.utfsm.cl>;
Erick Branderhorst <branderhorst@fgg.eur.nl>;
Bryan O'Sullivan <bos@serpentine.com>;
Alan J. Flavell <FLAVELL@v2.ph.gla.ac.uk>;
Raphael Manfredi <Raphael_Manfredi@grenoble.hp.com>;
Keith Iosso <a-keithi@microsoft.com>;
Chris Lambert <lambertc@sharelink.com>;
Tristan Savatier <tristan@creative.net>;
Phil Hooper <hooper@bcci.eng.sun.com>;
Gerald Viers <grviers@csupomona.edu>;
Dean Brissinger <brissing@bvsd.k12.co.us>;
Dave Schmitt <dschmi1@gl.umbc.edu>;
John Van Essen <vanes002@maroon.tc.umn.edu>;
Brandon Bell <brandon@arcs.bcit.bc.ca>;
Fumio Moriya and Toshiaki Nomura <dsfrsoft@oai6.yk.fujitsu.co.jp>;
Vincent Lefevre <vlefevre@ens-lyon.fr>;
Jason Mathews <mathews@nssdc.gsfc.nasa.gov>;
Lars Balker Rasmussen <lbr@mjolner.dk>;
Richard L. Hawes <rhawes@dmapub.dma.org>.
